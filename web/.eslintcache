[{"/home/tuca/workspace/challengeCotabox/web/src/index.tsx":"1","/home/tuca/workspace/challengeCotabox/web/src/reportWebVitals.ts":"2","/home/tuca/workspace/challengeCotabox/web/src/pages/App/index.tsx":"3","/home/tuca/workspace/challengeCotabox/web/src/components/Header/index.tsx":"4","/home/tuca/workspace/challengeCotabox/web/src/components/Input/index.tsx":"5","/home/tuca/workspace/challengeCotabox/web/src/components/ParticipationsTable/index.tsx":"6","/home/tuca/workspace/challengeCotabox/web/src/components/ParticipationsChart/index.jsx":"7"},{"size":504,"mtime":1609369195491,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1609368458272,"results":"10","hashOfConfig":"9"},{"size":1341,"mtime":1609386502500,"results":"11","hashOfConfig":"9"},{"size":667,"mtime":1609376588352,"results":"12","hashOfConfig":"9"},{"size":271,"mtime":1609377174525,"results":"13","hashOfConfig":"9"},{"size":1114,"mtime":1609386221935,"results":"14","hashOfConfig":"9"},{"size":1126,"mtime":1609386433514,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"15ai7o0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tuca/workspace/challengeCotabox/web/src/index.tsx",[],["32","33","34","35","36","37"],"/home/tuca/workspace/challengeCotabox/web/src/reportWebVitals.ts",["38"],"import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/home/tuca/workspace/challengeCotabox/web/src/pages/App/index.tsx",[],"/home/tuca/workspace/challengeCotabox/web/src/components/Header/index.tsx",[],"/home/tuca/workspace/challengeCotabox/web/src/components/Input/index.tsx",[],"/home/tuca/workspace/challengeCotabox/web/src/components/ParticipationsTable/index.tsx",["39"],"/home/tuca/workspace/challengeCotabox/web/src/components/ParticipationsChart/index.jsx",["40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":3,"column":25,"nodeType":"55","messageId":"56","endLine":3,"endColumn":57},{"ruleId":"57","severity":1,"message":"58","line":4,"column":9,"nodeType":"59","messageId":"60","endLine":4,"endColumn":12,"suggestions":"61"},{"ruleId":"57","severity":1,"message":"58","line":7,"column":9,"nodeType":"59","messageId":"60","endLine":7,"endColumn":12,"suggestions":"62"},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["63"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["64","65"],["66","67"],"padding-line-between-statements",{"messageId":"68","fix":"69","desc":"70"},{"messageId":"71","fix":"72","desc":"73"},{"messageId":"68","fix":"74","desc":"70"},{"messageId":"71","fix":"75","desc":"73"},"suggestUnknown",{"range":"76","text":"77"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"76","text":"78"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"79","text":"77"},{"range":"79","text":"78"},[54,57],"unknown","never",[137,140]]